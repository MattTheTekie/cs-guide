import{_ as o,r as p,o as c,c as r,d as n,e as a,b as e,a as t}from"./app-3d979d38.js";const l={},i=n("h1",{id:"mc的区块原理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mc的区块原理","aria-hidden":"true"},"#"),a(" mc的区块原理")],-1),k={href:"https://minecraft.fandom.com/zh/wiki/%E5%87%BA%E7%94%9F%E7%82%B9%E5%8C%BA%E5%9D%97",target:"_blank",rel:"noopener noreferrer"},d={href:"https://minecraft.fandom.com/zh/wiki/Java%E7%89%88",target:"_blank",rel:"noopener noreferrer"},u={href:"https://minecraft.fandom.com/zh/wiki/%E4%B8%96%E7%95%8C%E5%8A%A0%E8%BD%BD%E7%95%8C%E9%9D%A2",target:"_blank",rel:"noopener noreferrer"},m=t('<p>一个mca文件包含32个区块,就是说坐标(511,60,511)在r.1.1.mca中</p><h2 id="minecraft中坐标-区块坐标-mca文件名之间的转换" tabindex="-1"><a class="header-anchor" href="#minecraft中坐标-区块坐标-mca文件名之间的转换" aria-hidden="true">#</a> Minecraft中坐标 | 区块坐标 | .mca文件名之间的转换</h2><p>x坐标: 1024 y坐标: 1024 则x区块坐标: 64 z区块坐标: 64 ​</p><p>Region文件名称(mca): r.2.2.mca</p><h2 id="关系" tabindex="-1"><a class="header-anchor" href="#关系" aria-hidden="true">#</a> 关系</h2><p>Y轴用不到，所以这里省略 下文中Px,Pz,Cx,Cz,Rx,Rz均为变量</p><p>设玩家的坐标X,Z分(Px , Pz), 区块坐标为(Cx , Cz), .mca文件名为 r.<code>Rx</code>.<code>Rz</code>.mca Px, Pz的类型均为浮点型(float), Cx, Cz, Rx, Rz均为整数型(int)</p><p>坐标 | 区块坐标 | .mca文件名 之间关系如下</p>',8),h={class:"hint-container tip"},f=n("p",{class:"hint-container-title"},"提示",-1),_={href:"https://minecraft-zh.gamepedia.com/%E5%9D%90%E6%A0%87",target:"_blank",rel:"noopener noreferrer"},x={href:"https://minecraft-zh.gamepedia.com/%E5%8C%BA%E5%9D%97",target:"_blank",rel:"noopener noreferrer"},b={href:"https://minecraft-zh.gamepedia.com/%E5%8C%BA%E5%9F%9F%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"world(地图目录)\\region",-1),E=t(`<p><strong>注意: 区块坐标 与 .mca文件名 的变量 Cx,Cz,Rx,Rz 均向下取整!</strong><strong>下文不再提示</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Cx</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Px</span> <span class="token operator">/</span> <span class="token number">16</span>
<span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Cz</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Pz</span> <span class="token operator">/</span> <span class="token number">16</span>
<span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Rx</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Cx</span> <span class="token operator">/</span> <span class="token number">32</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Px</span> <span class="token operator">/</span> <span class="token number">16</span> <span class="token operator">/</span> <span class="token number">32</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Px</span> <span class="token operator">/</span> <span class="token number">512</span>
<span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Rz</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Cx</span> <span class="token operator">/</span> <span class="token number">32</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Pz</span> <span class="token operator">/</span> <span class="token number">16</span> <span class="token operator">/</span> <span class="token number">32</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token class-name">Pz</span> <span class="token operator">/</span> <span class="token number">512</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也就是说只要知道玩家坐标 (Px , Pz) 便可获知区块坐标 (Px / 16 , Pz / 16) 和 .mca文件名 r.<code>Px/512</code>.<code>Pz/512</code>.mca</p>`,3);function C(v,g){const s=p("ExternalLinkIcon");return c(),r("div",null,[i,n("p",null,[a("区块宽16格，长16格，高256格。"),n("a",k,[a("当玩家第一次出现在世界时"),e(s)]),a("会在其周围生成区块，在"),n("a",d,[a("Java版"),e(s)]),a("中，世界中最初会生成43×43个区块，其过程显示在"),n("a",u,[a("世界加载界面"),e(s)]),a("。而随着玩家对世界的探索，相邻的区块也会被生成。")]),m,n("div",h,[f,n("p",null,[n("a",_,[a("坐标"),e(s)]),a(": 坐标（coordinates）在数字上反映了玩家在主世界中的位置。坐标基于一个由三条交于一点（即原点）的坐标轴而形成的网格 "),n("a",x,[a("区块"),e(s)]),a(": 区块（Chunk）是Minecraft世界里一个大小为16×256×16的部分 "),n("a",b,[a(".mca文件"),e(s)]),a(": 存档文件, 一个mca文件包含32个区块, 既 512×256×512 大小范围, 保存在 "),z,a(" 中")])]),E])}const w=o(l,[["render",C],["__file","minecraft-chunks.html.vue"]]);export{w as default};
