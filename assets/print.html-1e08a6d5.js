import{_ as t,r as e,o as p,c as o,d as n,e as s,b as i,a as c}from"./app-3d979d38.js";const l={},r=n("h1",{id:"一些变量小技巧",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一些变量小技巧","aria-hidden":"true"},"#"),s(" 一些变量小技巧")],-1),u={class:"hint-container tip"},d=n("p",{class:"hint-container-title"},"提示",-1),k={href:"https://docs.python.org/3/library/string.html",target:"_blank",rel:"noopener noreferrer"},h=c(`<h2 id="旧式字符串格式化-运算符" tabindex="-1"><a class="header-anchor" href="#旧式字符串格式化-运算符" aria-hidden="true">#</a> 旧式字符串格式化（％ 运算符）</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello %s, this is %d&quot;</span> <span class="token operator">%</span><span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>变量替换:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="新式字符串格式化-str-format" tabindex="-1"><a class="header-anchor" href="#新式字符串格式化-str-format" aria-hidden="true">#</a> 新式字符串格式化（str.format）</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{2}, {1}, {0}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello {name}, this is {total}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span>total<span class="token operator">=</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串插值-f-strings-python-3-6" tabindex="-1"><a class="header-anchor" href="#字符串插值-f-strings-python-3-6" aria-hidden="true">#</a> 字符串插值 / f-Strings（Python 3.6+)</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name<span class="token punctuation">,</span>total<span class="token operator">=</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span><span class="token number">45</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;hello </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">, this is </span><span class="token interpolation"><span class="token punctuation">{</span>total<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模板字符串-标准库" tabindex="-1"><a class="header-anchor" href="#模板字符串-标准库" aria-hidden="true">#</a> 模板字符串（标准库）</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
s <span class="token operator">=</span> Template<span class="token punctuation">(</span><span class="token string">&#39;$who likes $what&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>substitute<span class="token punctuation">(</span>who<span class="token operator">=</span><span class="token string">&#39;tim&#39;</span><span class="token punctuation">,</span> what<span class="token operator">=</span><span class="token string">&#39;kung pao&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
d<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>who<span class="token operator">=</span><span class="token string">&#39;tim&#39;</span><span class="token punctuation">)</span>
Template<span class="token punctuation">(</span><span class="token string">&#39;$who likes $what&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>safe_substitute<span class="token punctuation">(</span>d<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function m(g,v){const a=e("ExternalLinkIcon");return p(),o("div",null,[r,n("div",u,[d,n("p",null,[n("a",k,[s("https://docs.python.org/3/library/string.html"),i(a)])])]),h])}const y=t(l,[["render",m],["__file","print.html.vue"]]);export{y as default};
