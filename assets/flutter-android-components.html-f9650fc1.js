import{_ as t,o as i,c as d,a as o}from"./app-3d979d38.js";const e={},r=o('<h1 id="flutter和原生android控件对比" tabindex="-1"><a class="header-anchor" href="#flutter和原生android控件对比" aria-hidden="true">#</a> Flutter和原生Android控件对比</h1><table><thead><tr><th>Flutter控件</th><th>Android控件</th></tr></thead><tbody><tr><td>AppBar</td><td>ActionBar/ToolBar</td></tr><tr><td>ListView</td><td>ListView/RecyclerView</td></tr><tr><td>Text</td><td>TextView</td></tr><tr><td>Center</td><td>ViewGroup</td></tr><tr><td>FloatingActionButton</td><td>FloatingActionButton(design库里面的)</td></tr><tr><td>BottomNavigationBar</td><td>BottomNavigation(design库里面的)</td></tr><tr><td>RaisedButton/Button</td><td>Button</td></tr><tr><td>Column</td><td>LinearLayout的android:orientation=&quot;vertical&quot;</td></tr><tr><td>Row</td><td>android:orientation=&quot;horizontal&quot;</td></tr><tr><td>DecorationImage</td><td>ImageView</td></tr><tr><td>Image</td><td>ImageView</td></tr><tr><td>Stack</td><td>FrameLayout/RelativeLayout</td></tr><tr><td>Container</td><td>RelativeLayout</td></tr><tr><td>CustomMultiChildLayout</td><td>RelativeLayout</td></tr><tr><td>Algin</td><td>alginParentXXX属性</td></tr><tr><td>resizeToAvoidBottomPadding</td><td>android:windowSoftInputMode=”adjustResize属性</td></tr><tr><td>SingleChildScrollView</td><td>ScrollView</td></tr><tr><td>CustomScrollerView</td><td>Recyclerview</td></tr></tbody></table><hr><p>Image里面的BoxFit参数介绍：（相当于Android的ImageView的scaleType参数）</p><p>// fill 通过篡改原始宽高比来填充目标box</p><p><img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_fill.png" alt=""></p><p>/// contain 在尽可能大的情况下，仍然将源完全包含在目标框中。</p><p><img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_contain.png" alt=""></p><p>/// cover 尽可能小，同时仍然覆盖整个目标框。</p><p><img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_cover.png" alt=""></p><p>/// fitWidth 确保显示源的全部宽度，而不管这是否意味着源垂直溢出目标框。</p><p><img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_fitWidth.png" alt=""></p><p>/// fitHeight 确保显示源的全部高度，而不管这是否意味着源水平地溢出目标框。</p><p><img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_fitHeight.png" alt=""></p><p>/// none 在目标框中对齐源（默认为居中），并放弃位于框外的源的任何部分。源图像未调整大小。</p><p><img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_none.png" alt=""></p><p>/// scaleDown 在目标框中对齐源(默认为居中)，如果需要，将源缩小以确保源适合该框。这与contain的内容相同，如果该内容会收缩图像，那么它就是none。</p><p><img src="https://flutter.github.io/assets-for-api-docs/assets/painting/box_fit_scaleDown.png" alt=""></p>',18),a=[r];function n(s,p){return i(),d("div",null,a)}const c=t(e,[["render",n],["__file","flutter-android-components.html.vue"]]);export{c as default};
