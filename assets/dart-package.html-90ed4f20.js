import{_ as e,r as c,o,c as i,d as n,e as s,b as t,a as p}from"./app-3d979d38.js";const l={},u=n("h1",{id:"dart基础",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dart基础","aria-hidden":"true"},"#"),s(" dart基础")],-1),r=n("h2",{id:"版本管理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#版本管理","aria-hidden":"true"},"#"),s(" 版本管理")],-1),d={href:"https://dart.dev/tools/pub/versioning",target:"_blank",rel:"noopener noreferrer"},k=p(`<p>配置环境变量</p><p>flutter默认的cache在<code>D:\\flutter\\.pub-cache</code> dart默认的cache在<code>%LOCALAPPDATA%\\Pub\\Cache</code> 所以要想让dart使用flutter的cache路径,需要设置环境变量<code>PUB_CACHE</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>PUB_CACHE
这个变量决定了 pub get 下载的依赖包存在到的位置，默认一般在当前用户的目录下面，可以通过环境变量修改默认位置.

PUB_HOSTED_URL
这个变量了指定 pub get 从哪里下载依赖包的资源，默认为 pub.dev，但国内经常出现无法访问的情况，因此可以通过设置环境变量指定镜像地址。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比如我设置的<code>PUB_CACHE</code>就是<code>D:\\flutter\\.pub-cache</code>,这样下载依赖就不会下载到<code>%LOCALAPPDATA%\\Pub\\Cache</code>去了</p><h2 id="编译为exe" tabindex="-1"><a class="header-anchor" href="#编译为exe" aria-hidden="true">#</a> 编译为exe</h2>`,5),v={href:"https://dart.dev/tools/dart-compile",target:"_blank",rel:"noopener noreferrer"},m=p(`<p>例子</p><h2 id="获取文件的md5" tabindex="-1"><a class="header-anchor" href="#获取文件的md5" aria-hidden="true">#</a> 获取文件的md5</h2><p>js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> buffer <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;app.apk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> hash <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hash<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> md5 <span class="token operator">=</span> hash<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>md5<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>dart</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token comment"># 运行</span>
dart run bin\\md5<span class="token punctuation">.</span>dart
<span class="token comment"># 编译exe</span>
dart compile exe bin\\md5<span class="token punctuation">.</span>dart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:crypto/crypto.dart&#39;</span></span> <span class="token operator">as</span> crypto<span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:typed_data&#39;</span></span><span class="token punctuation">;</span>

bool <span class="token function">isPhone</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">RegExp</span> pathReg <span class="token operator">=</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">r&quot;\\.\\\\&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> pathReg<span class="token punctuation">.</span><span class="token function">hasMatch</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> arguments<span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>

  <span class="token keyword">var</span> filePath <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">;</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isPhone</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    filePath<span class="token operator">=</span>arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>
  <span class="token function">print</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> fileStream <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">openRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span>md5<span class="token punctuation">;</span>
    <span class="token keyword">final</span> checksum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> md5<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>fileStream<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print</span><span class="token punctuation">(</span>checksum<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;找不到文件&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function b(h,f){const a=c("ExternalLinkIcon");return o(),i("div",null,[u,r,n("p",null,[n("a",d,[s("官网"),t(a)])]),k,n("p",null,[s("见文档 "),n("a",v,[s("https://dart.dev/tools/dart-compile"),t(a)])]),m])}const _=e(l,[["render",b],["__file","dart-package.html.vue"]]);export{_ as default};
