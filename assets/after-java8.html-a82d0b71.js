import{_ as t,r as p,o as c,c as o,d as n,e as a,b as l,a as s}from"./app-3d979d38.js";const i={},u=s(`<h1 id="java8之后的兼容性" tabindex="-1"><a class="header-anchor" href="#java8之后的兼容性" aria-hidden="true">#</a> java8之后的兼容性</h1><p>​</p><h2 id="缺少javafx和javax-添加javax" tabindex="-1"><a class="header-anchor" href="#缺少javafx和javax-添加javax" aria-hidden="true">#</a> 缺少javafx和javax,添加javax</h2><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.annotation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.annotation-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何在java8以上版本使用javafx" tabindex="-1"><a class="header-anchor" href="#如何在java8以上版本使用javafx" aria-hidden="true">#</a> 如何在java8以上版本使用javafx?</h2>`,5),d={href:"https://gluonhq.com/products/javafx/",target:"_blank",rel:"noopener noreferrer"},r=n("code",null,"java --module-path <path to unzipped folder>/lib --add-modules ALL-MODULE-PATH -jar <path to mcaselector-1.16.3.jar>",-1),k=n("code",null,"<>",-1),v=s(`<h2 id="jdk1-8-找不到-sun-misc-base64decoder-的解决方法" tabindex="-1"><a class="header-anchor" href="#jdk1-8-找不到-sun-misc-base64decoder-的解决方法" aria-hidden="true">#</a> JDK1.8 找不到 sun.misc.BASE64Decoder 的解决方法</h2><p>使用JDK.18 自带</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Base64</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Base64<span class="token punctuation">.</span>Encoder</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Base64<span class="token punctuation">.</span>Decoder</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代替sun.misc.BASE64Decoder 例子1</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">BASE64Decoder</span> base64 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BASE64Decoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> base64<span class="token punctuation">.</span><span class="token function">decodeBuffer</span><span class="token punctuation">(</span>publicKeyStr<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>替代方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Decoder</span> decoder<span class="token operator">=</span><span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">getMimeDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//注不要使用.getDecoder();</span>
<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span>decoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>publicKeyStr<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function m(h,g){const e=p("ExternalLinkIcon");return c(),o("div",null,[u,n("p",null,[a("fx下载地址 "),n("a",d,[a("https://gluonhq.com/products/javafx/"),l(e)]),a(" ​ Open the command prompt and run "),r,a(" where you replace everything in "),k,a(" with the appropriate paths.")]),v])}const j=t(i,[["render",m],["__file","after-java8.html.vue"]]);export{j as default};
