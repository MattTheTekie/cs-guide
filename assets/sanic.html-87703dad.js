import{_ as n,o as s,c as a,a as t}from"./app-3d979d38.js";const p={},o=t(`<h1 id="sanic框架" tabindex="-1"><a class="header-anchor" href="#sanic框架" aria-hidden="true">#</a> sanic框架</h1><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>  
<span class="token keyword">from</span> colorama <span class="token keyword">import</span> Back<span class="token punctuation">,</span> Fore  
<span class="token keyword">from</span> sanic <span class="token keyword">import</span> Sanic  
<span class="token keyword">from</span> sanic<span class="token punctuation">.</span>response <span class="token keyword">import</span> json<span class="token punctuation">,</span> text  
  
<span class="token keyword">from</span> sanic_api<span class="token punctuation">.</span>cat_api <span class="token keyword">import</span> bp  
  
app <span class="token operator">=</span> Sanic<span class="token punctuation">(</span><span class="token string">&quot;MyHelloWorldApp&quot;</span><span class="token punctuation">)</span>  
app<span class="token punctuation">.</span>blueprint<span class="token punctuation">(</span>bp<span class="token punctuation">)</span>  
swagger_ui_configuration <span class="token operator">=</span> <span class="token punctuation">{</span>  
        <span class="token string">&quot;validatorUrl&quot;</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span>  <span class="token comment"># Disable Swagger validator  </span>
        <span class="token string">&quot;displayRequestDuration&quot;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>  
        <span class="token string">&quot;docExpansion&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>  <span class="token comment"># 或者full  </span>
  
    <span class="token punctuation">}</span>  
app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>SWAGGER_UI_CONFIGURATION <span class="token operator">=</span> swagger_ui_configuration  
app<span class="token punctuation">.</span>config<span class="token punctuation">.</span>OAS_UI_DEFAULT<span class="token operator">=</span><span class="token string">&quot;swagger&quot;</span>  
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>  
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>  
    <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">&quot;Hello, world.&quot;</span><span class="token punctuation">)</span>  
  
  
<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">&quot;/json&quot;</span><span class="token punctuation">)</span>  
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_json</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>  
    <span class="token keyword">return</span> json<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;清清楚楚&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">:</span> request<span class="token punctuation">.</span>args<span class="token punctuation">}</span><span class="token punctuation">)</span>  
  
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">handler</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>  
    <span class="token keyword">return</span> text<span class="token punctuation">(</span><span class="token string">&quot;OK&quot;</span><span class="token punctuation">)</span>  
  
  
app<span class="token punctuation">.</span>add_route<span class="token punctuation">(</span>handler<span class="token punctuation">,</span> <span class="token string">&quot;/test&quot;</span><span class="token punctuation">)</span>  
  
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>  
    port <span class="token operator">=</span> <span class="token number">9200</span>  
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>Fore<span class="token punctuation">.</span>RED<span class="token punctuation">}</span></span><span class="token string">http://localhost:</span><span class="token interpolation"><span class="token punctuation">{</span>port<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>  
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">,</span> port<span class="token operator">=</span>port<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),e=[o];function c(i,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","sanic.html.vue"]]);export{r as default};
