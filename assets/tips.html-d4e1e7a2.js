import{_ as t,r as i,o as l,c as r,d as e,e as n,b as s,a as o}from"./app-3d979d38.js";const p={},d=e("h1",{id:"常用技巧",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#常用技巧","aria-hidden":"true"},"#"),n(" 常用技巧")],-1),c=e("h2",{id:"常用控件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#常用控件","aria-hidden":"true"},"#"),n(" 常用控件")],-1),m={href:"https://juejin.cn/post/6965127022217543693",target:"_blank",rel:"noopener noreferrer"},u=o(`<p>BOM 是一个 Maven 模块，它声明一组库和版本的对应关系，将能极大地简化你在 Gradle 依赖块中定义 Compose 库版本的方式。您现在只需要定义一个 BOM 版本，就可以同时指定所有的 Compose 库版本，而不是分别定义每个版本(当库版本开始不同时，这可能会变得很麻烦并且容易出错)。每当 Compose 有一个新的稳定版本时，我们都将发布一个新的 BOM 版本，因此从稳定版本迁移到新的稳定版本将会十分轻松</p><p>具体来说，当你在 build.gradle 中引入 BOM 后</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// Import the Compose BOM
implementation platform(&#39;androidx.compose:compose-bom:2022.11.00&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>再引入其它 Compose 相关的库就不需要手动指定版本号了，它们会由 BOM 指定</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>implementation &quot;androidx.compose.ui:ui&quot;
implementation &quot;androidx.compose.material:material&quot;
implementation &quot;androidx.compose.ui:ui-tooling-preview&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>BOM 指定的版本都是稳定版，你也可以选择覆写部分版本到 alpha 版本，如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// Override Material Design 3 library version with a pre-release version
implementation &#39;androidx.compose.material3:material3:1.1.0-alpha01&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,7),v={href:"https://developer.android.google.cn/jetpack/compose/setup",target:"_blank",rel:"noopener noreferrer"},h=o(`<div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>  <span class="token keyword">val</span> composeBom <span class="token operator">=</span> <span class="token function">platform</span><span class="token punctuation">(</span>libs<span class="token punctuation">.</span>androidx<span class="token punctuation">.</span>compose<span class="token punctuation">.</span>bom<span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span>composeBom<span class="token punctuation">)</span>
    <span class="token function">androidTestImplementation</span><span class="token punctuation">(</span>composeBom<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),_={href:"https://www.jianshu.com/p/e73d2f2556a8",target:"_blank",rel:"noopener noreferrer"};function b(k,x){const a=i("ExternalLinkIcon");return l(),r("div",null,[d,c,e("p",null,[e("a",m,[n("https://juejin.cn/post/6965127022217543693"),s(a)]),n(" 自 Jetpack Compose 1.3.0 起，Google 提供了 Compose BOM（Bill of Materials）用于快速指定版本。")]),u,e("p",null,[n("需要注意的是，这样可能会使部分其它的 Compose 库也升级为对应的 alpha 版本，以确保兼容性。 BOM 和 库版本 的映射可以在 "),e("a",v,[n("Quick start | Jetpack Compose | Android Developers"),s(a)]),n(" 找到，")]),h,e("p",null,[n("关于主题 "),e("a",_,[n("https://www.jianshu.com/p/e73d2f2556a8"),s(a)])])])}const f=t(p,[["render",b],["__file","tips.html.vue"]]);export{f as default};
