import{_ as e,r as o,o as i,c as l,d as n,e as s,b as a,a as c}from"./app-3d979d38.js";const p={},u=n("h1",{id:"id生成策略",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#id生成策略","aria-hidden":"true"},"#"),s(" id生成策略")],-1),d=n("h2",{id:"雪花算法生成id",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#雪花算法生成id","aria-hidden":"true"},"#"),s(" 雪花算法生成id")],-1),r={href:"https://github.com/bwmarrin/snowflake",target:"_blank",rel:"noopener noreferrer"},k=c(`<div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
 <span class="token string">&quot;fmt&quot;</span>

 <span class="token string">&quot;github.com/bwmarrin/snowflake&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

 <span class="token comment">// Create a new Node with a Node number of 1</span>
 node<span class="token punctuation">,</span> err <span class="token operator">:=</span> snowflake<span class="token punctuation">.</span><span class="token function">NewNode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
 <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token keyword">return</span>
 <span class="token punctuation">}</span>

 <span class="token comment">// Generate a snowflake ID.</span>
 id <span class="token operator">:=</span> node<span class="token punctuation">.</span><span class="token function">Generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

 <span class="token comment">// Print out the ID in a few different ways.</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Int64  ID: %d\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;String ID: %s\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Base2  ID: %s\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">Base2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Base64 ID: %s\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">Base64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

 <span class="token comment">// Print out the ID&#39;s timestamp</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;ID Time  : %d\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">Time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

 <span class="token comment">// Print out the ID&#39;s node number</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;ID Node  : %d\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">Node</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

 <span class="token comment">// Print out the ID&#39;s sequence number</span>
 fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;ID Step  : %d\\n&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span><span class="token function">Step</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token comment">// Generate and print, all in one.</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;ID       : %d\\n&quot;</span><span class="token punctuation">,</span> node<span class="token punctuation">.</span><span class="token function">Generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int64</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成uuid" tabindex="-1"><a class="header-anchor" href="#生成uuid" aria-hidden="true">#</a> 生成uuid</h2>`,2),m=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"package"),n("th",{style:{"text-align":"left"}},"id"),n("th",{style:{"text-align":"left"}},"format")])],-1),f={style:{"text-align":"left"}},h={href:"https://github.com/segmentio/ksuid",target:"_blank",rel:"noopener noreferrer"},b=n("td",{style:{"text-align":"left"}},[n("code",null,"0pPKHjWprnVxGH7dEsAoXX2YQvU")],-1),_=n("td",{style:{"text-align":"left"}},"4 bytes of time (seconds) + 16 random bytes",-1),g={style:{"text-align":"left"}},v={href:"https://github.com/rs/xid",target:"_blank",rel:"noopener noreferrer"},y=n("td",{style:{"text-align":"left"}},[n("code",null,"b50vl5e54p1000fo3gh0")],-1),x=n("td",{style:{"text-align":"left"}},"4 bytes of time (seconds) + 3 byte machine id + 2 byte process id + 3 bytes random",-1),q={style:{"text-align":"left"}},w={href:"https://github.com/kjk/betterguid",target:"_blank",rel:"noopener noreferrer"},I=n("td",{style:{"text-align":"left"}},[n("code",null,"-Kmdih_fs4ZZccpx2Hl1")],-1),P=n("td",{style:{"text-align":"left"}},"8 bytes of time (milliseconds) + 9 random bytes",-1),D={style:{"text-align":"left"}},N={href:"https://github.com/sony/sonyflake",target:"_blank",rel:"noopener noreferrer"},B=n("td",{style:{"text-align":"left"}},[n("code",null,"20f8707d6000108")],-1),V=n("td",{style:{"text-align":"left"}},"~6 bytes of time (10 ms) + 1 byte sequence + 2 bytes machine id",-1),G={style:{"text-align":"left"}},C={href:"https://github.com/oklog/ulid",target:"_blank",rel:"noopener noreferrer"},E=n("td",{style:{"text-align":"left"}},[n("code",null,"01BJMVNPBBZC3E36FJTGVF0C4S")],-1),S=n("td",{style:{"text-align":"left"}},"6 bytes of time (milliseconds) + 8 bytes random",-1),F={style:{"text-align":"left"}},T={href:"https://github.com/chilts/sid",target:"_blank",rel:"noopener noreferrer"},j=n("td",{style:{"text-align":"left"}},[n("code",null,"1JADkqpWxPx-4qaWY47~FqI")],-1),H=n("td",{style:{"text-align":"left"}},"8 bytes of time (ns) + 8 random bytes",-1),J={style:{"text-align":"left"}},U={href:"https://github.com/gofrs/uuid",target:"_blank",rel:"noopener noreferrer"},W=n("td",{style:{"text-align":"left"}},[n("code",null,"5b52d72c-82b3-4f8e-beb5-437a974842c")],-1),Z={style:{"text-align":"left"}},A={href:"http://tools.ietf.org/html/rfc4122",target:"_blank",rel:"noopener noreferrer"},K={style:{"text-align":"left"}},L={href:"https://github.com/edwingeng/wuid",target:"_blank",rel:"noopener noreferrer"},X=n("td",{style:{"text-align":"left"}},[n("code",null,"187500764")],-1),Y=n("td",{style:{"text-align":"left"}},"6 bytes",-1);function M(Q,R){const t=o("ExternalLinkIcon");return i(),l("div",null,[u,d,n("p",null,[s("使用"),n("a",r,[s("https://github.com/bwmarrin/snowflake"),a(t)])]),k,n("table",null,[m,n("tbody",null,[n("tr",null,[n("td",f,[n("a",h,[s("github.com/segmentio/ksuid"),a(t)]),s("421")]),b,_]),n("tr",null,[n("td",g,[n("a",v,[s("github.com/rs/xid"),a(t)]),s("960")]),y,x]),n("tr",null,[n("td",q,[n("a",w,[s("github.com/kjk/betterguid"),a(t)]),s("96")]),I,P]),n("tr",null,[n("td",D,[n("a",N,[s("github.com/sony/sonyflake"),a(t)]),s("283")]),B,V]),n("tr",null,[n("td",G,[n("a",C,[s("github.com/oklog/ulid"),a(t)]),s("142")]),E,S]),n("tr",null,[n("td",F,[n("a",T,[s("github.com/chilts/sid"),a(t)]),s("105")]),j,H]),n("tr",null,[n("td",J,[n("a",U,[s("github.com/satori/go.uuid"),a(t)]),s("582")]),W,n("td",Z,[s("UUIDv4 from "),n("a",A,[s("RFC 4112"),a(t)]),s("44 for comparison")])]),n("tr",null,[n("td",K,[n("a",L,[s("https://github.com/edwingeng/wuid"),a(t)])]),X,Y])])])])}const O=e(p,[["render",M],["__file","go-id.html.vue"]]);export{O as default};
