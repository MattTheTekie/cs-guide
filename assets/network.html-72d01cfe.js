import{_ as e,r as c,o,c as i,d as n,e as s,b as t,a as p}from"./app-3d979d38.js";const l={},u=p(`<h1 id="dart-网络编程" tabindex="-1"><a class="header-anchor" href="#dart-网络编程" aria-hidden="true">#</a> Dart 网络编程</h1><p>以下提供Dart 关于网络编程方面的各种代码示例，对于具体的协议方面知识，请自行学习。</p><h2 id="tcp-服务端" tabindex="-1"><a class="header-anchor" href="#tcp-服务端" aria-hidden="true">#</a> TCP 服务端</h2><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:convert&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//绑定本地localhost的8081端口(即绑定：127.0.0.1)</span>
  <span class="token class-name">ServerSocket</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">InternetAddress</span><span class="token punctuation">.</span>loopbackIPv4<span class="token punctuation">,</span> <span class="token number">8081</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>serverSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    serverSocket<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      socket<span class="token punctuation">.</span>cast<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span>int<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span>decoder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>print<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上为简洁示例，不是非常清晰，等价于以下代码</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:convert&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">startTCPServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// TCP 服务端</span>
<span class="token keyword">void</span> <span class="token function">startTCPServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span><span class="token punctuation">{</span>
  <span class="token class-name">ServerSocket</span> serverSocket <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">ServerSocket</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">InternetAddress</span><span class="token punctuation">.</span>loopbackIPv4<span class="token punctuation">,</span> <span class="token number">8081</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//遍历所有连接到服务器的套接字</span>
  <span class="token keyword">await</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Socket</span> socket <span class="token keyword">in</span> serverSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 先将字节流以utf-8进行解码</span>
    socket<span class="token punctuation">.</span>cast<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span>int<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span>decoder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;from </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">socket<span class="token punctuation">.</span>remoteAddress<span class="token punctuation">.</span>address</span><span class="token punctuation">}</span></span><span class="token string"> data:&quot;</span></span> <span class="token operator">+</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      socket<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;hello client!&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tcp-客户端" tabindex="-1"><a class="header-anchor" href="#tcp-客户端" aria-hidden="true">#</a> TCP 客户端</h2><p>对应的简洁表达如下</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:convert&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 连接127.0.0.1的8081端口</span>
  <span class="token class-name">Socket</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;127.0.0.1&#39;</span></span><span class="token punctuation">,</span> <span class="token number">8081</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>socket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    socket<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Hello, Server!&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    socket<span class="token punctuation">.</span>cast<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span>int<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span>decoder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>print<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更清晰写法如下</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:convert&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">startTCPClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// TCP 客户端</span>
<span class="token keyword">void</span> <span class="token function">startTCPClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token comment">//连接服务器的8081端口</span>
  <span class="token class-name">Socket</span> socket <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">Socket</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;127.0.0.1&#39;</span></span><span class="token punctuation">,</span> <span class="token number">8081</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  socket<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Hello, Server!&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  socket<span class="token punctuation">.</span>cast<span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span>int<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span>decoder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>print<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="udp-服务端" tabindex="-1"><a class="header-anchor" href="#udp-服务端" aria-hidden="true">#</a> UDP 服务端</h2><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:convert&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">startUDPServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// UDP 服务端</span>
<span class="token keyword">void</span> <span class="token function">startUDPServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token class-name">RawDatagramSocket</span> rawDgramSocket <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">RawDatagramSocket</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">InternetAddress</span><span class="token punctuation">.</span>loopbackIPv4<span class="token punctuation">,</span> <span class="token number">8081</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//监听套接字事件</span>
  <span class="token keyword">await</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RawSocketEvent</span> event <span class="token keyword">in</span> rawDgramSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 数据包套接字不能监听数据，而是监听事件。</span>
    <span class="token comment">// 当事件为RawSocketEvent.read的时候才能通过receive函数接收数据</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>event <span class="token operator">==</span> <span class="token class-name">RawSocketEvent</span><span class="token punctuation">.</span>read<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">print</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>rawDgramSocket<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rawDgramSocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;UDP Server:already received!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">.</span>loopbackIPv4<span class="token punctuation">,</span> <span class="token number">8082</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="udp-客户端" tabindex="-1"><a class="header-anchor" href="#udp-客户端" aria-hidden="true">#</a> UDP 客户端</h2><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:convert&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">startUDPClent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// UDP 客户端</span>
<span class="token keyword">void</span> <span class="token function">startUDPClent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
   <span class="token class-name">RawDatagramSocket</span> rawDgramSocket <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">RawDatagramSocket</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;127.0.0.1&#39;</span></span><span class="token punctuation">,</span> <span class="token number">8082</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   rawDgramSocket<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;hello,world!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;127.0.0.1&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8081</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//监听套接字事件</span>
  <span class="token keyword">await</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">RawSocketEvent</span> event <span class="token keyword">in</span> rawDgramSocket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>event <span class="token operator">==</span> <span class="token class-name">RawSocketEvent</span><span class="token punctuation">.</span>read<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 接收数据</span>
        <span class="token function">print</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>rawDgramSocket<span class="token punctuation">.</span><span class="token function">receive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="http服务器与请求" tabindex="-1"><a class="header-anchor" href="#http服务器与请求" aria-hidden="true">#</a> HTTP服务器与请求</h2>`,16),k={href:"https://blog.csdn.net/yingshukun/category_9281313.html",target:"_blank",rel:"noopener noreferrer"},r=p(`<div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">HttpServer</span>
      <span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">InternetAddress</span><span class="token punctuation">.</span>loopbackIPv4<span class="token punctuation">,</span> <span class="token number">8080</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token comment">// 打印请求的path</span>
          <span class="token function">print</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>uri<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>uri<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;/greet&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">var</span> subPathList <span class="token operator">=</span> request<span class="token punctuation">.</span>uri<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;/&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span>subPathList<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
              request<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Hello, </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">subPathList<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              request<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
             request<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Hello, &#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
             request<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            request<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Welcome to test server!&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            request<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>浏览器输入<code>http://localhost:8080/greet/zhangsan</code>访问</p><p>以上是使用浏览器向服务器发出请求，接下来我们使用代码模拟浏览器发请求</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:convert&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">HttpClient</span> client <span class="token operator">=</span> <span class="token class-name">HttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  client<span class="token punctuation">.</span><span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;https://www.baidu.com/&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpClientRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 设置请求头</span>
      request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">HttpHeaders</span><span class="token punctuation">.</span>userAgentHeader<span class="token punctuation">,</span>
      <span class="token string-literal"><span class="token string">&quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpClientResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 处理响应</span>
      response<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>utf8<span class="token punctuation">.</span>decoder<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">(</span>contents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">print</span><span class="token punctuation">(</span>contents<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通常的，我们并不会直接使用Dart 标准库提供的<code>http</code> 网络请求API，因为标准库库使用上仍然过于繁琐，第三方库则更加简洁强大。在Flutter上，主要使用<code>dio</code>库，功能十分强大，另外还可以使用官方推出的<code>http</code>库，更加简洁精炼，链接如下</p>`,5),d={href:"https://pub.dev/packages/http",target:"_blank",rel:"noopener noreferrer"},v={href:"https://pub.dev/packages/dio",target:"_blank",rel:"noopener noreferrer"},m=n("h2",{id:"websocket",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#websocket","aria-hidden":"true"},"#"),s(" WebSocket")],-1),b=n("strong",null,"WebSocket",-1),g={href:"https://baike.baidu.com/item/TCP",target:"_blank",rel:"noopener noreferrer"},f={href:"https://baike.baidu.com/item/%E5%85%A8%E5%8F%8C%E5%B7%A5",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"ws",-1),w=n("code",null,"wxs",-1),y=n("p",null,"WebSocket 是独立的、创建在 TCP 上的协议。",-1),S={href:"https://baike.baidu.com/item/HTTP",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,"为了创建Websocket连接，需要通过浏览器发出请求，之后服务器进行回应，这个过程通常称为“握手”（handshaking）",-1),q=n("h3",{id:"服务端",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#服务端","aria-hidden":"true"},"#"),s(" 服务端")],-1),P={href:"https://api.dart.dev/stable/2.7.1/dart-io/WebSocketTransformer-class.html",target:"_blank",rel:"noopener noreferrer"},x=p(`<div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token class-name">HttpServer</span> server <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">HttpServer</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token class-name">InternetAddress</span><span class="token punctuation">.</span>loopbackIPv4<span class="token punctuation">,</span> <span class="token number">8083</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HttpRequest</span> req <span class="token keyword">in</span> server<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>uri<span class="token punctuation">.</span>path <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&#39;/ws&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 将一个HttpRequest转为WebSocket连接</span>
      <span class="token class-name">WebSocket</span> socket <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">WebSocketTransformer</span><span class="token punctuation">.</span><span class="token function">upgrade</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
      socket<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;from IP </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">req<span class="token punctuation">.</span>connectionInfo<span class="token punctuation">.</span>remoteAddress<span class="token punctuation">.</span>address</span><span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">data</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        socket<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;WebSocket Server:already received!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端" aria-hidden="true">#</a> 客户端</h3><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token class-name">WebSocket</span> socket <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">WebSocket</span><span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;ws://127.0.0.1:8083/ws&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  socket<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Hello, World!&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> data <span class="token keyword">in</span> socket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;from Server: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">data</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 关闭连接</span>
    socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function T(H,D){const a=c("ExternalLinkIcon");return o(),i("div",null,[u,n("p",null,[s("关于HTTP的详细说明，可参加本人 "),n("a",k,[s("相关博客"),t(a)])]),r,n("ul",null,[n("li",null,[n("a",d,[s("http"),t(a)])]),n("li",null,[n("a",v,[s("dio"),t(a)])])]),m,n("blockquote",null,[n("p",null,[b,s("是一种在单个"),n("a",g,[s("TCP"),t(a)]),s("连接上进行"),n("a",f,[s("全双工"),t(a)]),s("通信的协议。它的出现使得客户端和服务端都可以主动的推送消息，可以是文本也可以是二进制数据。而且没有同源策略的限制，不存在跨域问题。协议的标识符就是"),h,s("。像https一样如果加密的话就是"),w,s("。")])]),y,n("p",null,[s("Websocket 通过"),n("a",S,[s("HTTP"),t(a)]),s("/1.1 协议的101状态码进行握手。")]),_,q,n("p",null,[s("Web套接字服务器使用普通的HTTP服务器来接受Web套接字连接。初始握手是HTTP请求，然后将其升级为Web套接字连接。服务器使用"),n("a",P,[s("WebSocketTransformer"),t(a)]),s("升级请求， 并侦听返回的Web套接字上的数据")]),x])}const C=e(l,[["render",T],["__file","network.html.vue"]]);export{C as default};
