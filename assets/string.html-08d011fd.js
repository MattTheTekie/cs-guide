import{_ as e,r as t,o as c,c as o,d as n,e as s,b as p,a as l}from"./app-3d979d38.js";const i={},r=n("h1",{id:"字符串",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#字符串","aria-hidden":"true"},"#"),s(" 字符串")],-1),u={href:"https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/tokens/interpolated",target:"_blank",rel:"noopener noreferrer"},d=l(`<div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">StringTest1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//可以讲string类型 看做是char类型的一个只读数组</span>
            <span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> <span class="token string">&quot;abcdefg&quot;</span><span class="token punctuation">;</span>
            s <span class="token operator">=</span> <span class="token string">&quot;bbcdefg&quot;</span><span class="token punctuation">;</span>
            <span class="token comment">// s[0] = &#39;b&#39;;不能这样做  因为是只读的</span>
            <span class="token comment">//首先将字符串转换为char类型的数组</span>
            <span class="token class-name"><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> chs <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">ToCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            chs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;b&#39;</span><span class="token punctuation">;</span>
            <span class="token comment">//将字符数组转换为我们的字符串</span>
            s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span></span><span class="token punctuation">(</span>chs<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//既然可以将string看做char类型的只读数组，所以我可以通过下标去访问字符串中的某一个元素</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function k(m,v){const a=t("ExternalLinkIcon");return c(),o("div",null,[r,n("p",null,[n("a",u,[s("https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/tokens/interpolated"),p(a)])]),d])}const b=e(i,[["render",k],["__file","string.html.vue"]]);export{b as default};
